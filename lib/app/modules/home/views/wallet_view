class WalletWidget extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Obx(() {
      final userSolde = userController.userSolde;
      final userDisplayName = authController.currentUser.value?.displayName ?? 'Utilisateur';
      final userPhotoUrl = authController.currentUser.value?.photoURL;
      final userRoles = authController.currentUser.value?.roles ?? [];
      final isUserRoleActive = userRoles.contains('user');

      return Container(
        margin: const EdgeInsets.all(16),
        padding: const EdgeInsets.all(20),
        decoration: BoxDecoration(
          gradient: LinearGradient(
            colors: [Colors.blue, Colors.blue.shade800],
            begin: Alignment.topLeft,
            end: Alignment.bottomRight,
          ),
          borderRadius: BorderRadius.circular(20),
          boxShadow: [
            BoxShadow(
              color: Colors.blue.withOpacity(0.3),
              blurRadius: 8,
              offset: const Offset(0, 4),
            ),
          ],
        ),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                Text(
                  'Solde total',
                  style: TextStyle(
                    color: Colors.white.withOpacity(0.8),
                    fontSize: 16,
                  ),
                ),
                Obx(() => IconButton(
                      icon: Icon(
                        homeController.isBalanceVisible.value
                            ? Icons.visibility_off
                            : Icons.visibility,
                        color: Colors.white,
                      ),
                      onPressed: () => homeController.toggleBalanceVisibility(),
                    )),
              ],
            ),
            const SizedBox(height: 8),
            Obx(() => homeController.isBalanceVisible.value
                ? Text(
                    currencyFormat.format(userSolde),
                    style: const TextStyle(
                      color: Colors.white,
                      fontSize: 32,
                      fontWeight: FontWeight.bold,
                    ),
                  )
                : const Text(
                    '••••••••••',
                    style: TextStyle(
                      color: Colors.white,
                      fontSize: 32,
                      fontWeight: FontWeight.bold,
                    ),
                  )),
            if (isUserRoleActive)
              Column(
                children: [
                  const SizedBox(height: 8),
                  Text(
                    'Vous avez accès aux fonctionnalités utilisateur.',
                    style: TextStyle(
                      color: Colors.white.withOpacity(0.8),
                      fontSize: 14,
                    ),
                  ),
                ],
              ),
            const SizedBox(height: 20),
            _buildQuickActions(),
            const SizedBox(height: 16),
            // Optionnel : Affichage d'un profil utilisateur avec une photo et son nom
            if (userPhotoUrl != null)
              CircleAvatar(
                backgroundImage: NetworkImage(userPhotoUrl),
                radius: 30,
              ),
            if (userDisplayName != null)
              Text(
                userDisplayName,
                style: TextStyle(color: Colors.white, fontSize: 16),
              ),
          ],
        ),
      );
    });
  }

  Widget _buildQuickActions() {
    return Row(
      mainAxisAlignment: MainAxisAlignment.spaceEvenly,
      children: [
        ElevatedButton(
          onPressed: () {},
          child: Text('Transfert'),
        ),
        ElevatedButton(
          onPressed: () {},
          child: Text('Recharge'),
        ),
      ],
    );
  }
}
